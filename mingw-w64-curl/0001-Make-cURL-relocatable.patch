diff --git a/configure.ac b/configure.ac
index 798fa5f1e..2ed766c0d 100755
--- a/configure.ac
+++ b/configure.ac
@@ -3474,6 +3474,7 @@ if test "xyes" = "x$longlong"; then
   ])
 fi
 
+AC_DEFINE_UNQUOTED(CURL_BINDIR, "${prefix}/bin", [bindir])
 
 # check for ssize_t
 AC_CHECK_TYPE(ssize_t, ,
diff --git a/lib/Makefile.inc b/lib/Makefile.inc
index 69f9b403d..44e2dc039 100644
--- a/lib/Makefile.inc
+++ b/lib/Makefile.inc
@@ -170,6 +170,7 @@
   nonblock.c         \
   openldap.c         \
   parsedate.c        \
+  pathtools.c        \
   pingpong.c         \
   pop3.c             \
   progress.c         \
@@ -289,6 +290,7 @@
   non-ascii.h        \
   nonblock.h         \
   parsedate.h        \
+  pathtools.h        \
   pingpong.h         \
   pop3.h             \
   progress.h         \
diff --git a/lib/curl_config.h.in b/lib/curl_config.h.in
index 0f2a80403..9bad51f8d 100644
--- a/lib/curl_config.h.in
+++ b/lib/curl_config.h.in
@@ -12,6 +12,9 @@
 /* Default SSL backend */
 #undef CURL_DEFAULT_SSL_BACKEND
 
+/* Location of executable */
+#undef CURL_BINDIR
+
 /* to disable cookies support */
 #undef CURL_DISABLE_COOKIES
 
--- curl-8.4.0/lib/url.c.orig	2023-10-09 08:21:51.000000000 +0200
+++ curl-8.4.0/lib/url.c	2023-11-05 12:26:12.030706100 +0100
@@ -119,6 +119,9 @@
 #include "altsvc.h"
 #include "dynbuf.h"
 #include "headers.h"
+#if defined(__MINGW32__)
+#include "pathtools.h"
+#endif
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
@@ -572,21 +575,46 @@
    */
   if(Curl_ssl_backend() != CURLSSLBACKEND_SCHANNEL) {
 #if defined(CURL_CA_BUNDLE)
+#if defined(__MINGW32__)
+    char *relocated_bundle = single_path_relocation_lib(CURL_BINDIR, CURL_CA_BUNDLE);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE], relocated_bundle);
+    free(relocated_bundle);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAFILE], CURL_CA_BUNDLE);
+#endif /* defined(__MINGW32__) */
     if(result)
       return result;
 
+#if defined(__MINGW32__)
+    relocated_bundle = single_path_relocation_lib(CURL_BINDIR, CURL_CA_BUNDLE);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_PROXY],
+                            relocated_bundle);
+    free(relocated_bundle);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAFILE_PROXY],
                             CURL_CA_BUNDLE);
+#endif
     if(result)
       return result;
 #endif
 #if defined(CURL_CA_PATH)
+#if defined(__MINGW32__)
+    char *relocated_ca_path = single_path_relocation_lib(CURL_BINDIR, CURL_CA_PATH);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAPATH], relocated_ca_path);
+    free(relocated_ca_path);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAPATH], CURL_CA_PATH);
+#endif /* defined(__MINGW32__) */
     if(result)
       return result;
 
+#if defined(__MINGW32__)
+    relocated_ca_path = single_path_relocation_lib(CURL_BINDIR, CURL_CA_PATH);
+    result = Curl_setstropt(&set->str[STRING_SSL_CAPATH_PROXY], relocated_ca_path);
+    free(relocated_ca_path);
+#else
     result = Curl_setstropt(&set->str[STRING_SSL_CAPATH_PROXY], CURL_CA_PATH);
+#endif
     if(result)
       return result;
 #endif
